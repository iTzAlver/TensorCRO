# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
#                                                           #
#   This file was created by: Alberto Palomo Alonso         #
# Universidad de Alcalá - Escuela Politécnica Superior      #
#                                                           #
# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
import tensorflow as tf
from ..substrate import CROSubstrate


# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
#                        MAIN CLASS                         #
# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
class UniformCrossover(CROSubstrate):
    def __init__(self):
        """
        Uniform crossover is a genetic operator used to combine the information of two parents to generate a new
        individual. The new individual is generated by randomly selecting a gene from each parent with equal
        probability. This operator is used in the genetic algorithm to generate new individuals. It takes no
        arguments.
        """

    def _call(self, individuals: tf.Tensor) -> tf.Tensor:
        noi = tf.shape(individuals)[0] // 2
        fathers = individuals[0:noi]
        mothers = individuals[noi:noi * 2]
        selector = tf.cast(tf.random.uniform(shape=tf.shape(fathers), minval=0, maxval=2, dtype=tf.int32),
                           dtype=tf.bool)
        return tf.where(selector, fathers, mothers)
# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
#                        END OF FILE                        #
# - x - x - x - x - x - x - x - x - x - x - x - x - x - x - #
